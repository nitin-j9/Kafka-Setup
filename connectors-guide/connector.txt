curl -i -X POST -H "Content-Type:application/json" \
http://localhost:8083/connectors \
-d '{
"name":"POSTGRES_OUTBOX_EVENT_SOURCE_CONNECTOR",
"config":{
"name":"POSTGRES_OUTBOX_EVENT_SOURCE_CONNECTOR",
"connector.class":"io.debezium.connector.postgresql.PostgresConnector",
"tasks.max":"1",
"plugin.name":"pgoutput",
"publication.autocreate.mode":"filtered",
"publication.name":"catalog_outbox_dbz_publication",
"slot.name":"catalog_outbox_pgoutput_streaming_slot",
"database.hostname":"postgres",
"database.port":"5432",
"database.user":"root",
"database.password":"password",
"database.dbname":"product_db",
"database.server.name":"product_outbox",
"schema.include.list":"catalog",
"table.include.list":"catalog.outbox_event",
"internal.key.converter":"org.apache.kafka.connect.json.JsonConverter",
"internal.key.converter.schemas.enable":"false",
"internal.value.converter":"org.apache.kafka.connect.json.JsonConverter",
"internal.value.converter.schemas.enable":"false",
"message.key.columns":"catalog.outbox_event:aggregate_id,type",
"key.converter":"io.confluent.connect.avro.AvroConverter",
"key.converter.schemas.enable":"true",
"key.converter.enhanced.avro.schema.support":"true",
"key.converter.schema.registry.url":"http://schema-registry:8081",
"value.converter":"io.confluent.connect.avro.AvroConverter",
"value.converter.schemas.enable":"true",
"value.converter.enhanced.avro.schema.support":"true",
"value.converter.schema.registry.url":"http://schema-registry:8081",
"transforms":"compare,route,filter,partition-routing",
"transforms.filter.type": "io.debezium.transforms.Filter",
"transforms.filter.language": "jsr223.groovy",
"transforms.filter.condition": "value.op != \"d\"",
"transforms.compare.type":"com.devs.kafka.BeforeAfterCompareFilter",
"transforms.compare.exclude.column.list":"created_at,last_modified_at",
"transforms.partition-routing.type": "io.debezium.transforms.partitions.PartitionRouting",
"transforms.partition-routing.partition.payload.fields":"change.aggregate_id",
"transforms.partition-routing.partition.topic.num":"3",
"transforms.route.type":"org.apache.kafka.connect.transforms.RegexRouter",
"transforms.route.regex":"([^.]+)_outbox.([^.]+).([^.]+)",
"transforms.route.replacement":"$1$2_$3",
"tombstones.on.delete":"false",
"topic.creation.default.cleanup.policy":"compact",
"topic.creation.default.replication.factor":"3",
"topic.creation.default.partitions":"3",
"topic.prefix":"product_outbox"
}
}'